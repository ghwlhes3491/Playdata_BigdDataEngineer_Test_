package com.concert.view;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;

import com.concert.exception.DuplicateException;
import com.concert.service.MemberService;
import com.concert.service.ReservationService;
import com.concert.exception.CommonException;
import com.concert.exception.RecordNotFoundException;
import com.concert.model.Member;


public class MemberMenu {

	public MemberService service = new MemberService();
	public ReservationService Book = new ReservationService();

	
		public void mainMenu(){
		printTitle("공연 예메 시스템 Main 화면");

		print("1. 로그인");
		print("2. 회원가입");
		print("0. 종료");
		print("-------------");
		print(">> 원하는 메뉴 번호를 입력하세요(숫자만):");
		int menuNo = inputNumber();
		
		switch(menuNo) {
		case 1:
			loginMenu();
			break;
		case 2:
			addMemberMenu();
			break;
		case 0:
			exitMenu();
			break;
		default:
			System.out.println("[오류] 해당 숫자에대한 메뉴가 없습니다.");
			break;
		}

	}
	/**
	 * 프로그램 서비스전에 초기화 작업 위한 메뉴 
	 */
	public void initMenu() {
		
		MemberService service = new MemberService();
		
		// 초기화 회원 등록 
		int count = 0;
		try {
			count = service.initMember();
		} catch (DuplicateException e) {
			print("[실패] " + e.getMessage());		
		}
		print("[회원 초기화 작업이 완료되었습니다. 현재 등록 회원수 (" + count + ")명]");
		
		// 프로그램 서비스전에 기존 회원정보 파일가져와서 회원관리저장구조 메모리에 저장하기
		// loadMemberDataFile();

	}
	/**
	 * 로그인 메뉴
	 * @throws DuplicateException 
	 */
	public void loginMenu() {
		
		try {
			service.initMember();
		} catch (DuplicateException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}

//		for(int index = 0; index <list.size(); index++) {
//			System.out.println(list.get(index));
//		}
		
		printTitle("로그인 메뉴");
		System.out.print("아이디 : ");
		String memberId = inputString();

		System.out.print("비밀번호 : ");
		String memberPw = inputString();

		try {
			String grade = service.login(memberId, memberPw);
			print("[로그인성공] " + memberId + "님 ");
			switch(grade) {
			case "G":
				serviceMainMenu();
				break;
			case "A":
				adminMainMenu();
				break;
			}
		} catch (RecordNotFoundException e) {
			print("[실패] " + e.getMessage());
			mainMenu();
		} catch (CommonException e) {
			print("[실패] " + e.getMessage());
			mainMenu();
		}
	}	
	/**
	 * 회원 전용 서비스 메인메뉴
	 */
	private void serviceMainMenu() {
		printTitle("회원 전용 서비스 메뉴");
		
		System.out.println("1. 공연정보조회");
		System.out.println("2. 공연예약");
		System.out.println("3. 공연예약확인");
		System.out.println("9. 공연예약취소");
		System.out.println("0. 메인화면으로가기");
		System.out.print("\n메뉴번호 입력 : ");
		
		int menuNo = inputNumber();
		
		switch(menuNo) {
		case 1:
			infoMenu();
			break;
		case 2:
			break;
		case 3:
			break;
		case 9:
			print("[로그아웃 성공] 서비스를 이용하시려면 로그인하시기 바랍니다.");
			mainMenu();
			break;
		case 0:
			mainMenu();
			break;
		default:
			System.out.println("메뉴번호 오류");
			break;
		}
	}
	private void infoMenu() {
		printTitle("공연 정보 조회 & 예약 페이지");
		try {
			service.initInfo();
		} catch (DuplicateException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}

		print(">> 예매를 원하는 공연의 번호를 입력하세요(숫자만):");
		//Book.initReservation();
		
		int concertNo = inputNumber() ;	
//		switch(concertNo) {
//			case 1:
//				Book.showReserve(Book01);
//				break;
//			case 2:
//				Book.showReserve(Book02);
//				break;
//			case 3:
//				Book.showReserve(Book03);
//				break;
//			case 4:
//				Book.showReserve(Book04);
//				break;
//			case 5:
//				Book.showReserve(Book05);
//				break;
//			default:
//				System.out.println("메뉴번호 오류");
//				break;
//		}
	}
	
	

	
	private void adminMainMenu() {
		printTitle("관리자 서비스 메인메뉴");
		
		System.out.println("1. 공연 정보 조회");
		System.out.println("2. 공연 정보 변경");
		System.out.println("3. 공연 취소");
		System.out.println("4. 회원관리[전체회원조회]");
		System.out.println("9. 로그아웃");
		System.out.println("0. 프로그램 종료");
		System.out.print("\n메뉴번호 입력 : ");
		
		int menuNo = inputNumber();
		
		switch(menuNo) {
		case 1:
			break;
		case 2:
			break;
		case 3:
			break;
		case 9:
			mainMenu();
			break;
		case 0:
			exitMenu();
			break;
		default:
			System.out.println("메뉴번호 오류");
			break;
		}	
	}
	
	
	/** 회원 가입 메뉴 */
	public void addMemberMenu() {
		printTitle("회원 가입 메뉴");
		
		System.out.print("아이디 : ");
		String memberId = inputString();

		System.out.print("비밀번호 : ");
		String memberPw = inputString();

		System.out.print("이름 : ");
		String name = inputString();

		System.out.print("휴대폰 : ");
		String mobile = inputString();

		System.out.print("이메일 : ");
		String email = inputString();
		
		Member dto = new Member(memberId, memberPw, name, mobile, email);
		try {
			// 회원 가입은 성공처리되나 로그인시에 오류가 발생됨 : 이유를 찾아보세요??
			// service.addMember(dto);
			
			service.addMember(memberId, memberPw, name, mobile, email);
			
			print("[성공] " + memberId + "님 회원등록 완료되었습니다. 로그인 후 회원전용 서비스를 이용하시기 바랍니다.");
			loginMenu();
		} catch (DuplicateException e) {
			print("[실패] " + e.getMessage());
			mainMenu();
		}
	}
	/** 프로그램 종료 메뉴 */
	public void exitMenu() {
		// 프로그램 종료전에 회원정보 파일 저장
		// saveMemberDataFile();
		
		printTitle("공연예매 프로그램이 종료됩니다.");
		System.exit(0);
	}
	
	
	/**
	 * 제목 출력
	 * @param title 제목
	 */
	public void printTitle(String title) {
		System.out.println("\n★"+title+"★");

	}
	public static void print(String message) {	
		System.out.println(message);
	
	}
	/**
	 * 문자열 입력 반환
	 * @return 입력 문자열
	 */
	public String inputString() {
		String data = null;
		try {
			BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
			data = in.readLine();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return data;
	}
	
	/**
	 * 숫자 입력 반환
	 * @return 입력 정수형 숫자
	 */
	public int inputNumber() {
		String data = null;
		try {
			BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
			data = in.readLine();
		} catch (IOException e) {
			e.printStackTrace();
		}
		return Integer.parseInt(data);
	}
	
	
	
}
